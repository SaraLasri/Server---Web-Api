// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server___Web_Api.DAL;

#nullable disable

namespace Server___Web_Api.Migrations
{
    [DbContext(typeof(pageContext))]
    [Migration("20231213093330_updat")]
    partial class updat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Server___Web_Api.Models.Candidates", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("beginYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastUpdateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Server___Web_Api.Models.Languages", b =>
                {
                    b.Property<int>("LanguagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguagesId"), 1L, 1);

                    b.Property<int>("CandidatesId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguagesId");

                    b.HasIndex("CandidatesId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Server___Web_Api.Models.LanguagesDetail", b =>
                {
                    b.Property<int>("LanguagesDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguagesDetailId"), 1L, 1);

                    b.Property<int>("CandidatesId")
                        .HasColumnType("int");

                    b.Property<int>("LanguagesId")
                        .HasColumnType("int");

                    b.HasKey("LanguagesDetailId");

                    b.HasIndex("CandidatesId");

                    b.HasIndex("LanguagesId");

                    b.ToTable("LanguagesDetail");
                });

            modelBuilder.Entity("Server___Web_Api.Models.Languages", b =>
                {
                    b.HasOne("Server___Web_Api.Models.Candidates", "Candidates")
                        .WithMany()
                        .HasForeignKey("CandidatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("Server___Web_Api.Models.LanguagesDetail", b =>
                {
                    b.HasOne("Server___Web_Api.Models.Candidates", "Candidates")
                        .WithMany("Languages")
                        .HasForeignKey("CandidatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server___Web_Api.Models.Languages", "Languages")
                        .WithMany()
                        .HasForeignKey("LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidates");

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("Server___Web_Api.Models.Candidates", b =>
                {
                    b.Navigation("Languages");
                });
#pragma warning restore 612, 618
        }
    }
}
